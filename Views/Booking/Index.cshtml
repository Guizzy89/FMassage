@model IEnumerable<FMassage.Models.Booking>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@{
    Layout = "_Layout";
    ViewData["Title"] = "Список сеансов массажа";
}

<h2>Список сеансов массажа</h2>

@if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
{
    <p>
        <a href="@Url.Action("Create", "Booking")" class="btn btn-info mb-3">Добавить новый сеанс</a>
    </p>
}

@if (!User.Identity.IsAuthenticated)
{
    <div class="alert alert-info">
        <strong>Внимание!</strong> Для бронирования сеанса необходимо
        <a href="@Url.Action("Login", "Account")" class="alert-link">войти</a> или
        <a href="@Url.Action("Register", "Account")" class="alert-link">зарегистрироваться</a>.
    </div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Дата и время</th>
            <th>Продолжительность</th>
            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
            {
                <th>Статус</th>
                <th>Клиент</th>
                <th>Телефон</th>
                <th>Комментарий</th>
                <th>Действия</th>
            }
            else if (User.Identity.IsAuthenticated)
            {
                <th>Действия</th>
            }
            else
            {
                <th>Статус</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.SlotDate.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@item.Duration.Minutes мин.</td>

                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
                {
                    <td>
                        @if (item.IsAvailable)
                        {
                            <span class="badge bg-success">Свободен</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Забронирован</span>
                        }
                    </td>
                    <td>@item.ClientName</td>
                    <td>@item.PhoneNumber</td>
                    <td>@item.Comment</td>
                    <td>
                        <a href="@Url.Action("Edit", "Booking", new { id = item.Id })" class="btn btn-warning btn-sm">Редактировать</a>
                        <a href="@Url.Action("Delete", "Booking", new { id = item.Id })" onclick="return confirm('Вы действительно хотите удалить этот сеанс?');" class="btn btn-danger btn-sm">Удалить</a>
                    </td>
                }
                else if (User.Identity.IsAuthenticated)
                {
                    <td>
                        @if (item.IsAvailable)
                        {
                            <a href="@Url.Action("Book", "Booking", new { id = item.Id })" class="btn btn-success btn-sm">Забронировать</a>
                        }
                        else
                        {
                            <span class="text-muted">Недоступно</span>
                        }
                    </td>
                }
                else
                {
                    <td>
                        @if (item.IsAvailable)
                        {
                            <span class="badge bg-success">Свободен</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Забронирован</span>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@if (User.Identity.IsAuthenticated)
{
    <div class="mt-3">
        <a href="@Url.Action("MyBookings", "Booking")" class="btn btn-primary">Мои бронирования</a>
    </div>
}